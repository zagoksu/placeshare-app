{"version":3,"sources":["shared/components/UIElements/Card.js","shared/components/UIElements/Avatar.js","user/components/UserItem.js","user/components/UsersList.js","user/pages/Users.js"],"names":["Card","props","className","style","children","Avatar","src","image","alt","width","height","UserItem","to","id","process","name","placeCount","UsersList","items","length","map","user","key","places","Users","useHttpClient","isLoading","error","sendRequest","clearError","useState","loadedUsers","setLoadedUsers","useEffect","a","responseData","users","fetchUsers","Fragment","ErrorModal","onClear","LoadingSpinner"],"mappings":"qGAAA,0BAYeA,IARF,SAAAC,GACX,OACE,yBAAKC,UAAS,eAAUD,EAAMC,WAAaC,MAAOF,EAAME,OACrDF,EAAMG,Y,+LCSEC,G,MAZA,SAAAJ,GACb,OACE,yBAAKC,UAAS,iBAAYD,EAAMC,WAAaC,MAAOF,EAAME,OACxD,yBACEG,IAAKL,EAAMM,MACXC,IAAKP,EAAMO,IACXL,MAAO,CAAEM,MAAOR,EAAMQ,MAAOC,OAAQT,EAAMQ,Y,QCgBpCE,G,MAnBE,SAAAV,GACb,OACI,wBAAIC,UAAU,aACN,kBAACF,EAAA,EAAD,CAAME,UAAU,sBAChB,kBAAC,IAAD,CAAMU,GAAE,WAAMX,EAAMY,GAAZ,YACJ,yBAAKX,UAAU,oBACX,kBAAC,EAAD,CAAQK,MAAK,UAAKO,sCAAL,YAAwCb,EAAMM,OAASC,IAAKP,EAAMc,QAEnF,yBAAKb,UAAU,mBACX,4BAAKD,EAAMc,MACX,4BAAKd,EAAMe,WAAX,IAA6C,IAArBf,EAAMe,WAAmB,QAAU,SAA3D,WCiBTC,EA5BG,SAAAhB,GACd,OAA2B,IAAvBA,EAAMiB,MAAMC,OAEZ,yBAAKjB,UAAU,UACX,kBAACF,EAAA,EAAD,KACE,iDAOV,wBAAIE,UAAU,cACTD,EAAMiB,MAAME,KAAI,SAAAC,GAAI,OACjB,kBAAC,EAAD,CACIC,IAAKD,EAAKR,GACVA,GAAIQ,EAAKR,GACTN,MAAOc,EAAKd,MACZQ,KAAMM,EAAKN,KACXC,WAAYK,EAAKE,OAAOJ,c,wBCUzBK,UA5BD,WAAO,IAAD,EACoCC,cAA9CC,EADU,EACVA,UAAWC,EADD,EACCA,MAAOC,EADR,EACQA,YAAaC,EADrB,EACqBA,WADrB,EAEoBC,qBAFpB,mBAEXC,EAFW,KAEEC,EAFF,KAelB,OAXAC,qBAAU,YACQ,uCAAG,4BAAAC,EAAA,+EAEYN,EAAYd,iDAFxB,OAETqB,EAFS,OAIfH,EAAeG,EAAaC,OAJb,uGAAH,qDAOhBC,KACC,CAACT,IAGF,kBAAC,IAAMU,SAAP,KACE,kBAACC,EAAA,EAAD,CAAYZ,MAAOA,EAAOa,QAASX,IAClCH,GACC,yBAAKxB,UAAU,UACb,kBAACuC,EAAA,EAAD,QAGFf,GAAaK,GAAe,kBAAC,EAAD,CAAWb,MAAOa","file":"static/js/8.a1d285f3.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Avatar from '../../shared/components/UIElements/Avatar';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport './UserItem.css';\r\n\r\nconst UserItem = props => {\r\n    return (\r\n        <li className=\"user-item\">\r\n                <Card className=\"user-item__content\">\r\n                <Link to={`/${props.id}/places`}>\r\n                    <div className=\"user-item__image\">\r\n                        <Avatar image={`${process.env.REACT_APP_ASSET_URL}/${props.image}`} alt={props.name} />\r\n                    </div>\r\n                    <div className=\"user-item__info\">\r\n                        <h2>{props.name}</h2>\r\n                        <h3>{props.placeCount} {props.placeCount === 1 ? 'Place' : 'Places'} </h3>\r\n                    </div>\r\n                </Link>\r\n                </Card>\r\n        </li>\r\n    );\r\n\r\n};\r\n\r\nexport default UserItem;","import React from 'react';\r\n\r\nimport './UsersList.css';\r\nimport UserItem from './UserItem';\r\nimport Card from '../../shared/components/UIElements/Card';\r\n\r\nconst UsersList = props => {\r\n    if (props.items.length === 0) {\r\n        return (\r\n        <div className=\"center\">\r\n            <Card>\r\n              <h2>No users found.</h2>\r\n            </Card>\r\n        </div>\r\n    );\r\n    }\r\n\r\n    return (\r\n    <ul className=\"users-list\">\r\n        {props.items.map(user => (\r\n            <UserItem\r\n                key={user.id}\r\n                id={user.id}\r\n                image={user.image}\r\n                name={user.name}\r\n                placeCount={user.places.length}/>\r\n        )\r\n            \r\n        )}\r\n    </ul>);\r\n\r\n\r\n};\r\n\r\nexport default UsersList;","import React, { useEffect, useState } from 'react';\r\n\r\nimport UsersList from '../components/UsersList';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\n\r\nconst Users = () => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [loadedUsers, setLoadedUsers] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL + '/users');\r\n\r\n        setLoadedUsers(responseData.users);\r\n      } catch (err) {}\r\n    };\r\n    fetchUsers();\r\n  }, [sendRequest]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n"],"sourceRoot":""}